apiVersion: kro.run/v1alpha1
kind: ResourceGraphDefinition
metadata:
  name: ekscomposed.kro.run
spec:
  schema:
    apiVersion: v1alpha1
    kind: EKSComposed
    spec:
      name: string
      version: string | default="1.32"
      region: string | default="us-east-1"

  resources:
  - id: network
    template:
      apiVersion: kro.run/v1alpha1
      kind: NetworkingStack
      metadata:
        name: ${schema.spec.name}
      spec:
        name: ${schema.spec.name}
        region: ${schema.spec.region}
  - id: cluster
    readyWhen:
    - ${cluster.status.ready == true}
    template:
      apiVersion: kro.run/v1alpha1
      kind: EKSClusterAuto
      metadata:
        name: ${schema.spec.name}
      spec:
        name: ${schema.spec.name}
        region: ${schema.spec.region}
        version: ${schema.spec.version}
        subnetAZA: ${network.status.networkingInfo.subnetAZA}
        subnetAZB: ${network.status.networkingInfo.subnetAZB}
  - id: argocd
    template:
      apiVersion: v1
      kind: Secret
      metadata:
        name: ${cluster.spec.name}
        namespace: argocd
        labels:
          argocd.argoproj.io/secret-type: cluster
      type: Opaque
      stringData:
        name: ${cluster.spec.name}
        server: ${cluster.status.endpoint}
        clusterResources: "true"
        config: |
          {
            "execProviderConfig": {
              "command": "argocd-k8s-auth",
              "args": ["aws", "--cluster-name", "${cluster.spec.name}"],
              "apiVersion": "client.authentication.k8s.io/v1beta1"
            },
            "tlsClientConfig": {
              "insecure": false,
              "caData": ${cluster.status.cdata}
            }
          }